#!/usr/bin/env python3

# Test every patch from files folder and output error on failure
#
# Copyright (C) 2016 Intel Corporation
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# SPDX-License-Identifier: GPL-2.0-or-later

import os
import subprocess

currentdir = os.path.dirname(os.path.abspath(__file__))
patchesdir = os.path.join(currentdir, "files")
topdir = os.path.dirname(currentdir)


def test(root, patch):
    patchpath = os.path.abspath(os.path.join(root, patch))

    a = patch.split(".")
    klass, testname = a[0], a[1]
    expected_result = a[-1]
    testid = ".%s.%s" % (klass, testname)

    cmd = "patchtest %s -s %s/tests" % (patchpath, topdir)
    results = subprocess.check_output(
        cmd, stderr=subprocess.STDOUT, universal_newlines=True, shell=True
    )

    for resultline in results.splitlines():
        if testid in resultline:
            result, _ = resultline.split()
            if result.lower() != expected_result.lower():
                print(
                    "patch=%s expected=%s actual=%s cmd=%s"
                    % (patch, expected_result.lower(), result.lower(), cmd)
                )
            break
    else:
        print("No test for=%s" % patch)


if __name__ == "__main__":
    for root, dirs, patches in os.walk(patchesdir):
        for patch in patches:
            test(root, patch)
